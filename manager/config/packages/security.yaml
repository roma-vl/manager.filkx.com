security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
#            entity:
#                class: App\Model\User\Entity\User\User
#                property: email
            id: App\Security\UserProvider
#    hide_user_not_found: false
    firewalls:
        login:
            pattern: ^/api/login_check$
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                username_path: email
                password_path: password


        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            pattern: ^/
            provider: app_user_provider
            #            user_checker: security.user_checker
            user_checker: App\Security\UserChecker
            custom_authenticator: App\Security\LoginFormAuthenticator
            custom_authenticators:
                - App\Security\LoginFormAuthenticator
                - App\Security\OAuth\FacebookAuthenticator
                - App\Security\OAuth\GoogleAuthenticator
            entry_point: App\Security\LoginFormAuthenticator

            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: false
                csrf_token_id: authenticate
                csrf_parameter: _token
            #                csrf_token_manager: security.csrf.token_manager
            logout:
                path: app_logout
                target: app_login

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week
                path: /
            # where to redirect after logout
            # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_MANAGE_USERS
            - ROLE_WORK_MANAGE_MEMBERS
            - ROLE_WORK_MANAGE_PROJECTS
            - ROLE_MODERATOR
            - VIEW
        ROLE_MODERATOR:
            - ROLE_USER
            - ROLE_MANAGE_POSTS
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login$, roles: PUBLIC_ACCESS }
        - { path: ^/api/login_check$, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/signup, roles: PUBLIC_ACCESS }
        - { path: ^/oauth, roles: PUBLIC_ACCESS }
        - { path: ^/reset, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
